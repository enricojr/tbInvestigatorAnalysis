#ifndef  EFFICIENCY_HH
#define  EFFICIENCY_HH

#include <iostream>
#include <fstream>
using namespace std;

class runClass{
public:
  runClass(){};
  ~runClass(){};
  void print() const{
    cout << __PRETTY_FUNCTION__ << ": runNumber = " << _runNumber << endl;
    cout << __PRETTY_FUNCTION__ << ": fileNameIn = " << _fileNameIn << endl;
    cout << __PRETTY_FUNCTION__ << ": fileNameCfg = " << _fileNameCfg << endl;
  }
  void setFileNames(const char *fileNameInFormat,
		    const char *fileNameCfgFormat){
    char fileNameIn[1000];
    sprintf(fileNameIn, fileNameInFormat, _runNumber);
    _fileNameIn = fileNameIn;
    char fileNameCfg[1000];
    sprintf(fileNameCfg, fileNameCfgFormat, _runNumber);
    _fileNameCfg = fileNameCfg;
    return ;
  }
  unsigned int _runNumber;
  string _fileNameIn;
  string _fileNameCfg;
};

int getRunList(const char *fileNameRunList,
	       vector<runClass *> &run){

  ifstream file(fileNameRunList);
  if(!file){
    cout << __PRETTY_FUNCTION__ << ": ERROR!!! - cannot open run list file " << fileNameRunList << endl;
    return 1;
  }

  string line = "";
  while(getline(file, line)){
    runClass *newRun = new runClass();
    sscanf(line.c_str(), "%d", &newRun -> _runNumber);
    run.push_back(newRun);
  }
  
  file.close();
  
  return 0;
}

#endif
